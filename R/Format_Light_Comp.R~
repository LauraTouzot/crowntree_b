#############
### Code to compute light competition index

# get SLA from TRY public

extract_traits_public_try_light <- function(df){

  spvec <- names(table(df$sp)[table(df$sp)>50]  )
  print(length(spvec))
  TRYdata1 <- data.table::fread(file.path("data", "5374.txt"),
                                header = T, sep = "\t", dec = ".",
                                quote = "", fill = TRUE, na.strings= "")
  TRYdata2 <- data.table::fread(file.path("data", "5385.txt"),
                                header = T, sep = "\t", dec = ".", quote = "",
                                fill = TRUE, na.strings= "")
  TRYdata <- rbind(TRYdata1, TRYdata2)
  rm(TRYdata1, TRYdata2)
  # TRAITS to select
  SLA <- c(3115, 3115, 3117) # all
  LeafArea <- c(1, 3108:3113)
  df_SLA <- bind_rows(lapply(spvec, extractAll, TRYdata, SLA))
  df_SLA$Unit <- as.vector(na.omit(unique(TRYdata$UnitName[TRYdata$TraitID %in% SLA &
                                                             !is.na(TRYdata$TraitID)])))
  names(df_SLA) <- paste0("SLA_", names(df_SLA))
  df_LeafArea <- bind_rows(lapply(spvec, extractAll, TRYdata, LeafArea))
  df_LeafArea$Unit <- as.vector(na.omit(unique(TRYdata$UnitName[TRYdata$TraitID %in% LeafArea &
                                                                  !is.na(TRYdata$TraitID)])))
  names(df_LeafArea) <- paste0("LeafArea_", names(df_LeafArea))
  res <- bind_cols(df_SLA, df_LeafArea)
  res <- data.frame(sp = spvec, res)
  return(res)
}


# look at data from Forrester paper
read_forrester_data  <- function(){
    require(readxl)
  data <- read_excel(file.path("data", "1-s2.0-S0378112717301238-mmc1.xlsx"),
                    sheet = "Table A.2", skip = 11)
  spvec <- unique(data$Species)
    spname <- c("Abies alba", "Alnus glutinosa", "Alnus incana",
                "Acer pseudoplatanus", "Betula pendula Or B. pubescens",
                "Betula pendula", "Betula pendula Or B. pubescens",
                "Betula pubescens", "Carpinus betulus",
                "Castania sativa", "Fraxinus excelsior",
                "Fagus sylvatica", "Larix decidua", "Picea abies",
                "Populus alba", "Prunus avium", "Pinus cembra",
                "Pseudotuga menziesii", "Pinus nigra",
                "Populus hybrids", "Pinus pinaster",
                "Prunus serotina", "Pinus sylvestris",
                "Populus tremula", "Populus hybrids",
                "Quercus ilex", "Quercus petraea",
                "Quercus robur", "Quercus petraea Or Q. robur",
                "Robinia pseudoacacia", "Sorbus aucuparia",
                "Tilia cordata", "Tilia cordata Or T. platyphyllos")
  names(spname) <- spvec
  data$Species2 <- spname[data$Species]
  data$Genus  <- get_genus(data$Species2)
  data<- data[data$Component == "Foliage",]
  names(data)  <- gsub(".","",gsub(",","",gsub(")", "", gsub("(","", gsub(" ", "_", names(data)),
                                              fixed = TRUE), fixed = TRUE), fixed = TRUE), fixed = TRUE)

    old_names  <- names(data)
    old_names[16] <- "DBH"
    old_names[20] <- "LeafArea"
    old_names[21] <- "LeafMass"
    old_names[22] <- "LeafMassMSE"
    names(data) <- old_names

  library(dplyr)
    cut_diam  <- seq(from = 0, to =170, by = 5)
    dbh_cut <- cut_diam[-length(cut_diam)] +mean(diff(cut_diam))/2
    data$dbh_c <- dbh_cut[cut(data$DBH, breaks = cut_diam, labels = FALSE)]
  data_m <-  data %>% group_by(Genus, dbh_c) %>%
      summarise(LeafMass_m = mean(LeafMass, na.rm = TRUE),
                LeafMassMSE_m = mean(LeafMassMSE, na.rm = TRUE),
                LeafArea_m = mean(LeafArea, na.rm = TRUE))
  library(ggplot2)
     ggplot(data_m, aes(x = dbh_c, y = LeafMassMSE_m))+geom_point()+
        geom_smooth(method = "glm", formula = y~log(x),
                      method.args = list(family = gaussian(link = 'log')))+
        facet_wrap(vars(Genus))

    ggplot(data, aes(x = DBH, y = LeafMassMSE))+geom_point()+
                geom_smooth(method = "glm", formula = y~log(x),
                      method.args = list(family = gaussian(link = 'log')))+
        facet_wrap(vars(Genus))


    # fit equation
    library(lme4)
    mat_res  <- matrix(NA, nrow = length(unique(data$Genus)), ncol = 3)
    colnames(mat_res) <- c("lnB0", "Blnd", "CF")
    row.names(mat_res)  <- unique(data$Genus)
    dfp <- data.frame(Genus = NA, dbh = NA,
                LeafMass =NA)
    mat_resb  <- matrix(NA, nrow = length(unique(data$Genus)), ncol = 3)
    colnames(mat_resb) <- c("lnB0", "Blnd", "CF")
    row.names(mat_resb)  <- unique(data$Genus)
    dfpb <- data.frame(Genus = NA, dbh = NA,
                LeafMass =NA)

    dbhs  <- 1:100
    for (gs in unique(data$Genus)){
     df  <- data[data$Genus == gs,]
     if(length(unique(df$Equation_Number)) >1){
         res <- lmer(log(LeafMassMSE)~log(DBH) + (1 | Equation_Number), df)
         mat_res[gs, 1:2] <- fixef(res)
         mat_res[gs, 3]  <- mean(df$LeafMassMSE, na.rm = TRUE)/mean(exp(predict(res,
                                                  re.form = NA)), na.rm = TRUE)
     }else{
         res <- lm(log(LeafMassMSE)~log(DBH), df)
         mat_res[gs, 1:2] <- coefficients(res)
         mat_res[gs, 3]  <- mean(df$LeafMassMSE, na.rm = TRUE)/mean(exp(predict(res
                                                              )), na.rm = TRUE)

     }
         res <- lm(log(LeafMassMSE)~log(DBH), df)
         mat_resb[gs, 1:2] <- coefficients(res)
         mat_resb[gs, 3]  <- mean(df$LeafMassMSE, na.rm = TRUE)/mean(exp(predict(res
                                                              )), na.rm = TRUE)

     dfp <- rbind(dfp, data.frame(Genus = gs, dbh = dbhs,
                                  LeafMass = exp( mat_res[gs, 1] +
                                log(dbhs)*mat_res[gs, 2])*mat_res[gs, 3]))
     dfpb <- rbind(dfpb, data.frame(Genus = gs, dbh = dbhs,
                                  LeafMass = exp( mat_resb[gs, 1] +
                                log(dbhs)*mat_resb[gs, 2])*mat_resb[gs, 3]))
    }
dfp <- dfp[-1,]
dfpb <- dfpb[-1,]

    dfp2 <- data.frame(Genus = NA, dbh = NA,
                LeafMass =NA)
    mat_res2  <- matrix(NA, nrow = length(unique(data_m$Genus)), ncol = 3)
    colnames(mat_res2) <- c("lnB0", "Blnd", "CF")
    row.names(mat_res2)  <- unique(data_m$Genus)
    dbhs  <- 1:100
    for (gs in unique(data_m$Genus)){
     df  <- data_m[data_m$Genus == gs,]
     res <- lm(log(LeafMassMSE_m)~log(dbh_c), df)
     mat_res2[gs, 1:2] <- coefficients(res)
     mat_res2[gs, 3]  <- mean(df$LeafMassMSE_m, na.rm = TRUE)/mean(exp(predict(res)), na.rm = TRUE)
     dfp2 <- rbind(dfp2, data.frame(Genus = gs, dbh = dbhs,
                                  LeafMass = exp( coefficients(res)[1] +
                                                  log(dbhs)*coefficients(res)[2])*mat_res2[gs, 3]))
    }
dfp2 <- dfp2[-1,]

    ggplot(data, aes(x = DBH, y = LeafMassMSE))+geom_point()+
                geom_smooth(method = "glm", formula = y~log(x),
                            method.args = list(family = gaussian(link = 'log')))+
        geom_point(data = data_m, aes(x=dbh_c, y = LeafMassMSE_m), color = "blue")+
        geom_line(data = dfp, aes(x=dbh, y = LeafMass), color = "red")+
        geom_line(data = dfpb, aes(x=dbh, y = LeafMass), color = "pink", linetype = "dashed")+
        geom_line(data = dfp2, aes(x=dbh, y = LeafMass), color = "blue")+
        xlim(c(1,100))+ ylim(c(0, 300))+
        facet_wrap(vars(Genus), scales = "free")

    ggplot(dfp, aes(x = dbh, y = LeafMass, color = Genus))+
        xlim(c(1,100))+ ylim(c(0, 200))+
        geom_line()+
        geom_line(data = dfp2, aes(x = dbh, y = LeafMass, color = Genus),
                  linetype = "dashed") +
         facet_wrap(vars(Genus), scales = "free")
# read SLA Forrester
  SLA <- read_excel(file.path("data", "1-s2.0-S0378112717301238-mmc1.xlsx"),
                    sheet = "Table A.1", skip = 3)
  names(SLA) <- c("Species", "Age", "SLA_m2_kg", "Reference")
  library(dplyr)
    SLA_mean  <- SLA %>% group_by(Species) %>%
        summarise(SLA = mean(SLA_m2_kg, na.rm = TRUE))
## read params Forrester
  params <- read_excel(file.path("data", "1-s2.0-S0378112717301238-mmc1.xlsx"),
                       sheet = "Table A.4", skip = 22)
  names(params)  <-  gsub(substr(names(params)[6], 4,  4), "B",
                          names(params),
                          fixed = TRUE)
  names(params)  <-  gsub("(", "_",
                          names(params),
                          fixed = TRUE)
  names(params)  <-  gsub(")", "",
                          names(params),
                          fixed = TRUE)
  names(params)  <-  gsub(" ", "",
                          names(params),
                          fixed = TRUE)
  params$Genus  <- get_genus(params$Species)
  params_selA  <- params[params$Component == "Leaf area" & params$Equation == 3 &
                        params$ValidationorFinal == "Final model" &
                      is.na(params$Invalidequations), ]
  params_selA  <- tidyr::separate(params_selA, "ln_B0",
                                 into = c("lnB0", "lnB0_sd"), sep = "  \\(")
  params_selA  <- tidyr::separate(params_selA, "Bforln_d",
                                 into = c("Blnd", "Blnd_sd"), sep = "  \\(")
  params_selA$lnB0 <- as.numeric( params_selA$lnB0)
  params_selA$Blnd <- as.numeric( params_selA$Blnd)
  params_selA  <-  as.data.frame(params_selA)
  dbh_seq  <- 1:100
  cols <- pals::glasbey(nrow(params_selA))[2:nrow(params_selA)]

  pdf("figures/ForresterLeafAreaEqu.pdf", width = 10)
  i  <-  1
  plot(dbh_seq, exp(params_selA[i, "lnB0"] +
                    log(dbh_seq)* params_selA[i, "Blnd"]) *
                params_selA[i, "CF"], xlab = "DBH", ylab = "Leaf area (m2)",
       type = "l", ylim = c(0,1500), lwd = 2, col = cols[1])
   for (i in 2:nrow(params_selA)){
       lines(dbh_seq, exp(params_selA[i, "lnB0"] +
                          log(dbh_seq)* params_selA[i, "Blnd"]) *
                      params_selA[i, "CF"], col = cols[i], lty = i,
             lwd = 2)
   }
  legend(0, 1500, legend = params_selA$Species,
         col = cols, lty = 1:nrow(params_selA),
         bty = "n", lwd = 2)
  dev.off()

  params_sel  <- params[params$Component == "Foliage mass" & params$Equation == 3 &
                        params$ValidationorFinal == "Final model" &
                      is.na(params$Invalidequations), ]
  params_sel  <- tidyr::separate(params_sel, "ln_B0",
                                 into = c("lnB0", "lnB0_sd"), sep = "  \\(")
  params_sel  <- tidyr::separate(params_sel, "Bforln_d",
                                 into = c("Blnd", "Blnd_sd"), sep = "  \\(")
  params_sel$lnB0 <- as.numeric( params_sel$lnB0)
  params_sel$Blnd <- as.numeric( params_sel$Blnd)
  params_sel  <-  as.data.frame(params_sel)
  dbh_seq  <- 1:100
  cols <- pals::glasbey(nrow(params_sel))[2:nrow(params_sel)]



  pdf("figures/ForresterLeafMassEqu.pdf", width = 10)
  i  <-  1
  plot(dbh_seq, exp(params_sel[i, "lnB0"] +
                    log(dbh_seq)* params_sel[i, "Blnd"]) *
                params_sel[i, "CF"], xlab = "DBH", ylab = "Foliage mass (kg)",
       type = "l", ylim = c(0,200), lwd = 2, col = cols[1])
    dfpF <- data.frame(Genus = params_sel[i, "Genus"],
                       Species = params_sel[i, "Species"],
                       dbh = dbh_seq,
                LeafMass =exp(params_sel[i, "lnB0"] +
                    log(dbh_seq)* params_sel[i, "Blnd"]) *
                params_sel[i, "CF"])

   for (i in 2:nrow(params_sel)){
       lines(dbh_seq, exp(params_sel[i, "lnB0"] +
                          log(dbh_seq)* params_sel[i, "Blnd"]) *
                      params_sel[i, "CF"], col = cols[i], lty = i,
             lwd = 2)
       dfpF <- rbind(dfpF, data.frame(Genus = params_sel[i, "Genus"],
                       Species = params_sel[i, "Species"],
                       dbh = dbh_seq,
                LeafMass =exp(params_sel[i, "lnB0"] +
                    log(dbh_seq)* params_sel[i, "Blnd"]) *
                params_sel[i, "CF"]))

   }
  legend(0, 200, legend = params_sel$Species,
         col = cols, lty = 1:nrow(params_sel),
         bty = "n", lwd = 2)
 dev.off()



    ggplot(dfpF, aes(x = dbh, y = LeafMass))+
        xlim(c(1,100))+ ylim(c(0, 200))+
        geom_point(color = "red", size = 0.5)+
        geom_line(data = dfp2, aes(x = dbh, y = LeafMass),
                  color = "blue") +
        geom_line(data = dfp, aes(x = dbh, y = LeafMass),
                  color = "pink") +
         facet_wrap(vars(Genus), scales = "free") + guides(linetype=FALSE)


  pdf("figures/ForresterLeafPred.pdf", width = 14)
  for (sp in unique(data$Species2)){
    df <- as.data.frame(data[data$Species2 == sp,])
    par(mfrow = c(1,2))
    plot(df[, DBH], df[,LeafMass], main = sp)
    if(sum(params_sel$Species == sp)>0){
    lines(dbh_seq, exp(params_sel[params_sel$Species == sp, "lnB0"] +
                         log(dbh_seq)* params_sel[params_sel$Species == sp, "Blnd"]) *
            params_sel[params_sel$Species == sp, "CF"], lwd = 2)
    }
    if(sum(!is.na(df[,LeafArea]))){
      plot(df[, DBH], df[,LeafArea], main = sp)
      if(sum(params_selA$Species == sp)>0){
        lines(dbh_seq, exp(params_selA[params_selA$Species == sp, "lnB0"] +
                             log(dbh_seq)* params_selA[params_selA$Species == sp, "Blnd"]) *
                params_selA[params_selA$Species == sp, "CF"], lwd = 2)
      }
    }
  }
  dev.off()

  sp <- "All species combined"
  df <- as.data.frame(data[,])
  par(mfrow = c(1,2))
  plot(df[, DBH], df[,LeafMass], main = sp, xlim = c(0, 100))
  if(sum(params_sel$Species == sp)>0){
    lines(dbh_seq, exp(params_sel[params_sel$Species == sp, "lnB0"] +
                         log(dbh_seq)* params_sel[params_sel$Species == sp, "Blnd"]) *
            params_sel[params_sel$Species == sp, "CF"], lwd = 2)
  }
  if(sum(!is.na(df[,LeafArea]))){
    plot(df[, DBH], df[,LeafArea], main = sp, xlim = c(0, 100))
    if(sum(params_selA$Species == sp)>0){
      lines(dbh_seq, exp(params_selA[params_selA$Species == sp, "lnB0"] +
                           log(dbh_seq)* params_selA[params_selA$Species == sp, "Blnd"]) *
              params_selA[params_selA$Species == sp, "CF"], lwd = 2)
    }
  }


##  Re-fit regression with binded data per genus

}

